[{"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/App.tsx":"1","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/index.tsx":"2","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/styles/global.ts":"3","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/pages/Signin/index.tsx":"4","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/pages/Signin/styles.ts":"5","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/components/Button/index.tsx":"6","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/components/Input/index.tsx":"7","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/components/Button/style.ts":"8","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/components/Input/style.ts":"9","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/pages/SignUp/styles.ts":"10","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/pages/SignUp/index.tsx":"11","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/utils/getValidationErros.ts":"12","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/components/Tooltip/index.tsx":"13","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/components/Tooltip/style.ts":"14","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/services/api.ts":"15","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/components/ToastContainer/index.tsx":"16","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/components/ToastContainer/style.ts":"17","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/hooks/Auth.tsx":"18","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/hooks/index.tsx":"19","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/hooks/Toast.tsx":"20","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/components/ToastContainer/Toast/index.tsx":"21","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/components/ToastContainer/Toast/styles.ts":"22","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/routes/index.tsx":"23","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/routes/Route.tsx":"24","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/pages/Dashboard/index.tsx":"25","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/index.tsx":"26","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/App.tsx":"27","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/styles/global.ts":"28","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/hooks/index.tsx":"29","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/routes/index.tsx":"30","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/hooks/Auth.tsx":"31","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/routes/Route.tsx":"32","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/hooks/Toast.tsx":"33","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/services/api.ts":"34","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/pages/Signin/index.tsx":"35","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/pages/SignUp/index.tsx":"36","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/pages/Dashboard/index.tsx":"37","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/pages/ForgotPassword/index.tsx":"38","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/pages/Signin/styles.ts":"39","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/pages/SignUp/styles.ts":"40","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/pages/ForgotPassword/styles.ts":"41","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/utils/getValidationErros.ts":"42","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/components/ToastContainer/index.tsx":"43","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/components/ToastContainer/style.ts":"44","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/components/Button/index.tsx":"45","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/components/Input/index.tsx":"46","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/components/Button/style.ts":"47","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/components/Input/style.ts":"48","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/components/ToastContainer/Toast/index.tsx":"49","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/components/ToastContainer/Toast/styles.ts":"50","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/components/Tooltip/index.tsx":"51","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/components/Tooltip/style.ts":"52","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/pages/ResetPassword/index.tsx":"53","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/pages/ResetPassword/styles.ts":"54","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/pages/Dashboard/styles.ts":"55","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/pages/Profile/index.tsx":"56","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/pages/Profile/styles.ts":"57"},{"size":349,"mtime":1607728774930,"results":"58","hashOfConfig":"59"},{"size":198,"mtime":1606775633260,"results":"60","hashOfConfig":"59"},{"size":471,"mtime":1606593495809,"results":"61","hashOfConfig":"59"},{"size":2789,"mtime":1607789108921,"results":"62","hashOfConfig":"59"},{"size":1531,"mtime":1607730515539,"results":"63","hashOfConfig":"59"},{"size":315,"mtime":1607263772431,"results":"64","hashOfConfig":"59"},{"size":1536,"mtime":1607185579121,"results":"65","hashOfConfig":"59"},{"size":363,"mtime":1606863796974,"results":"66","hashOfConfig":"59"},{"size":1104,"mtime":1607188064276,"results":"67","hashOfConfig":"59"},{"size":1532,"mtime":1607730196432,"results":"68","hashOfConfig":"59"},{"size":2892,"mtime":1607788750686,"results":"69","hashOfConfig":"59"},{"size":321,"mtime":1607043248896,"results":"70","hashOfConfig":"59"},{"size":354,"mtime":1607185575065,"results":"71","hashOfConfig":"59"},{"size":762,"mtime":1607187504571,"results":"72","hashOfConfig":"59"},{"size":116,"mtime":1607273218354,"results":"73","hashOfConfig":"59"},{"size":780,"mtime":1607646880443,"results":"74","hashOfConfig":"59"},{"size":162,"mtime":1607558935961,"results":"75","hashOfConfig":"59"},{"size":1736,"mtime":1607472508203,"results":"76","hashOfConfig":"59"},{"size":272,"mtime":1607472970099,"results":"77","hashOfConfig":"59"},{"size":1355,"mtime":1607636580060,"results":"78","hashOfConfig":"59"},{"size":1239,"mtime":1607646494654,"results":"79","hashOfConfig":"59"},{"size":1189,"mtime":1607646758680,"results":"80","hashOfConfig":"59"},{"size":464,"mtime":1607785955712,"results":"81","hashOfConfig":"59"},{"size":830,"mtime":1607786770178,"results":"82","hashOfConfig":"59"},{"size":109,"mtime":1607780089316,"results":"83","hashOfConfig":"59"},{"size":198,"mtime":1606775633260,"results":"84","hashOfConfig":"85"},{"size":349,"mtime":1607728774930,"results":"86","hashOfConfig":"85"},{"size":471,"mtime":1606593495809,"results":"87","hashOfConfig":"85"},{"size":272,"mtime":1607472970099,"results":"88","hashOfConfig":"85"},{"size":798,"mtime":1614550116064,"results":"89","hashOfConfig":"85"},{"size":2285,"mtime":1614641489993,"results":"90","hashOfConfig":"85"},{"size":830,"mtime":1607786770178,"results":"91","hashOfConfig":"85"},{"size":1355,"mtime":1607636580060,"results":"92","hashOfConfig":"85"},{"size":116,"mtime":1607273218354,"results":"93","hashOfConfig":"85"},{"size":2805,"mtime":1613692542004,"results":"94","hashOfConfig":"85"},{"size":2892,"mtime":1607788750686,"results":"95","hashOfConfig":"85"},{"size":7799,"mtime":1614638497748,"results":"96","hashOfConfig":"85"},{"size":2742,"mtime":1613846537324,"results":"97","hashOfConfig":"85"},{"size":1531,"mtime":1607730515539,"results":"98","hashOfConfig":"85"},{"size":1532,"mtime":1607730196432,"results":"99","hashOfConfig":"85"},{"size":1531,"mtime":1613841270839,"results":"100","hashOfConfig":"85"},{"size":321,"mtime":1607043248896,"results":"101","hashOfConfig":"85"},{"size":780,"mtime":1607646880443,"results":"102","hashOfConfig":"85"},{"size":162,"mtime":1607558935961,"results":"103","hashOfConfig":"85"},{"size":476,"mtime":1613850754694,"results":"104","hashOfConfig":"85"},{"size":1657,"mtime":1614551496840,"results":"105","hashOfConfig":"85"},{"size":363,"mtime":1606863796974,"results":"106","hashOfConfig":"85"},{"size":1104,"mtime":1607188064276,"results":"107","hashOfConfig":"85"},{"size":1247,"mtime":1613838409334,"results":"108","hashOfConfig":"85"},{"size":1188,"mtime":1613838399970,"results":"109","hashOfConfig":"85"},{"size":354,"mtime":1607185575065,"results":"110","hashOfConfig":"85"},{"size":762,"mtime":1607187504571,"results":"111","hashOfConfig":"85"},{"size":2864,"mtime":1613856516543,"results":"112","hashOfConfig":"85"},{"size":1531,"mtime":1613844996897,"results":"113","hashOfConfig":"85"},{"size":5280,"mtime":1614549859542,"results":"114","hashOfConfig":"85"},{"size":5142,"mtime":1614725128134,"results":"115","hashOfConfig":"85"},{"size":1615,"mtime":1614635113371,"results":"116","hashOfConfig":"85"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},"1l5yru3",{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"119"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"119"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"119"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"119"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"119"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},"7jlu8g",{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"175"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"175"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"175"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"175"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"175"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"175"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"175"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"175"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"175"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"175"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"175"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/App.tsx",[],["248","249","250","251","252"],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/index.tsx",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/styles/global.ts",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/pages/Signin/index.tsx",["253"],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/pages/Signin/styles.ts",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/components/Button/index.tsx",["254"],"import React, { ButtonHTMLAttributes } from 'react';\n\nimport { Container } from './style';\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst Button: React.FC<ButtonProps> = ({ children, ...rest }) => (\n  <Container type=\"button\" {...rest}>\n    {children}\n  </Container>\n);\n\nexport default Button;\n","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/components/Input/index.tsx",["255","256"],"import React, {\n  InputHTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\n\nimport { Container, Error } from './style';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n  const handleIsFocused = useCallback(() => setIsFocused(true), []);\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n  return (\n    <Container isErrored={!!error} isFilled={isFilled} isFocused={isFocused}>\n      {Icon && <Icon size={20} />}\n      <input\n        onFocus={handleIsFocused}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#c53030\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/components/Button/style.ts",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/components/Input/style.ts",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/pages/SignUp/styles.ts",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/pages/SignUp/index.tsx",["257"],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/utils/getValidationErros.ts",["258"],"import { ValidationError } from 'yup';\n\ninterface Errors {\n  [key: string]: string;\n}\n\nexport default function getValidadetionErros(err: ValidationError): Errors {\n  const validationErrors: Errors = {};\n\n  err.inner.forEach(error => {\n    validationErrors[error.path] = error.message;\n  });\n\n  return validationErrors;\n}\n","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/components/Tooltip/index.tsx",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/components/Tooltip/style.ts",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/services/api.ts",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/components/ToastContainer/index.tsx",["259"],"import React from 'react';\nimport { useTransition } from 'react-spring';\n\nimport { Container } from './style';\nimport { ToastMessage } from '../../hooks/Toast';\nimport Toast from './Toast';\n\ninterface ToastContainerProps {\n  messages: ToastMessage[];\n}\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ messages }) => {\n  const messageWithTransitions = useTransition(\n    messages,\n    message => message.id,\n    {\n      from: { right: '-120%', opacity: 0 },\n      enter: { right: '0%', opacity: 1 },\n      leave: { right: '-120%', opacity: 0 },\n    },\n  );\n\n  return (\n    <Container>\n      {messageWithTransitions.map(({ key, item, props }) => (\n        <Toast key={key} style={props} message={item} />\n      ))}\n    </Container>\n  );\n};\n\nexport default ToastContainer;\n","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/components/ToastContainer/style.ts",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/hooks/Auth.tsx",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/hooks/index.tsx",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/hooks/Toast.tsx",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/components/ToastContainer/Toast/index.tsx",["260"],"import React, { useEffect } from 'react';\nimport {\n  FiAlertCircle,\n  FiXCircle,\n  FiInfo,\n  FiCheckCircle,\n} from 'react-icons/fi';\n\nimport { Container } from './styles';\n\nimport { ToastMessage, useToast } from '../../../hooks/Toast';\n\ninterface ObjectStyle {\n  [key: string]: unknown;\n}\n\ninterface ToastProps {\n  message: ToastMessage;\n  style: ObjectStyle;\n}\n\nconst icons = {\n  info: <FiInfo size={24} />,\n  error: <FiAlertCircle size={24} />,\n  success: <FiCheckCircle size={24} />,\n};\n\nconst Toast: React.FC<ToastProps> = ({ message, style }) => {\n  const { removeToast } = useToast();\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      removeToast(message.id);\n    }, 3000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [removeToast, message.id]);\n  return (\n    <Container\n      type={message.type}\n      hasDescription={!!message.description}\n      style={style}\n    >\n      {icons[message.type || 'info']}\n      <div>\n        <strong>{message.title}</strong>\n        {message.description && <p>{message.description}</p>}\n        <button onClick={() => removeToast(message.id)} type=\"button\">\n          <FiXCircle size={18} />\n        </button>\n      </div>\n    </Container>\n  );\n};\n\nexport default Toast;\n","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/components/ToastContainer/Toast/styles.ts",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/routes/index.tsx",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/routes/Route.tsx",["261"],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel03/06-gobarber-web/src/pages/Dashboard/index.tsx",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/index.tsx",[],["262","263","264","265","266"],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/App.tsx",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/styles/global.ts",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/hooks/index.tsx",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/routes/index.tsx",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/hooks/Auth.tsx",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/routes/Route.tsx",["267"],"import React from 'react';\nimport {\n  Route as ReactDOMRoute,\n  RouteProps as ReactDOMRouteProps,\n  Redirect,\n} from 'react-router-dom';\n\nimport { useAuth } from '../hooks/Auth';\n\ninterface RoutePropd extends ReactDOMRouteProps {\n  isPrivate?: boolean;\n  component: React.ComponentType;\n}\n\nconst Route: React.FC<RoutePropd> = ({\n  isPrivate = false,\n  component: Component,\n  ...rest\n}) => {\n  const { user } = useAuth();\n  const isSigned = !!user;\n  return (\n    <ReactDOMRoute\n      {...rest}\n      render={({ location }) => {\n        return isPrivate === isSigned ? (\n          <Component />\n        ) : (\n          <Redirect\n            to={{\n              pathname: isPrivate ? '/' : '/dashboard',\n              state: { from: location },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default Route;\n","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/hooks/Toast.tsx",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/services/api.ts",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/pages/Signin/index.tsx",["268"],"import React, { useRef, useCallback } from 'react';\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { Container, Content, Background, AnimationContainer } from './styles';\nimport logoimg from '../../assets/logo.svg';\n\nimport getValidadtionErrors from '../../utils/getValidationErros';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport { useAuth } from '../../hooks/Auth';\nimport { useToast } from '../../hooks/Toast';\n\ninterface SingInFormData {\n  email: string;\n  password: string;\n}\n\nconst Signin: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  // const { user, signIn } = useContext(AuthContext);\n  const { signIn } = useAuth();\n  const { addToast } = useToast();\n  const history = useHistory();\n  const handleSubmit = useCallback(\n    async (data: SingInFormData) => {\n      try {\n        formRef.current?.setErrors({});\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .required('Email obrigatório')\n            .email('Digite um email válido'),\n          password: Yup.string().required('Senha obrigatória'),\n        });\n        await schema.validate(data, { abortEarly: false });\n        const { email, password } = data;\n        await signIn({\n          email,\n          password,\n        });\n        history.push('/dashboard');\n      } catch (error) {\n        if (error instanceof Yup.ValidationError) {\n          const errors = getValidadtionErrors(error);\n          formRef.current?.setErrors(errors);\n        }\n        addToast({\n          type: 'error',\n          title: 'Error na autenticação',\n          description: 'Ocorreu um erro ao fazer login, cheque as credenciais',\n        });\n      }\n    },\n    [signIn, addToast, history],\n  );\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={logoimg} alt=\"Gobarber\" />\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Faça seu logon</h1>\n            <Input\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"E-mail\"\n              icon={FiMail}\n            />\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Senha\"\n              icon={FiLock}\n            />\n            <Button type=\"submit\">Entrar</Button>\n            <Link to=\"/forgot-password\">Esqueci minha senha</Link>\n          </Form>\n          <Link to=\"/signup\">\n            <FiLogIn />\n            Criar conta\n          </Link>\n        </AnimationContainer>\n      </Content>\n      <Background />\n    </Container>\n  );\n};\nexport default Signin;\n","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/pages/SignUp/index.tsx",["269"],"import React, { useCallback, useRef } from 'react';\nimport { FiArrowLeft, FiMail, FiLock, FiUser } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { Container, Content, Background, AnimationContainer } from './styles';\nimport logoimg from '../../assets/logo.svg';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport getValidadtionErrors from '../../utils/getValidationErros';\nimport api from '../../services/api';\nimport { useToast } from '../../hooks/Toast';\n\ninterface SignUpFormData {\n  name: string;\n  email: string;\n  password: string;\n}\n\nconst SignUp: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const history = useHistory();\n  const handleSubmit = useCallback(\n    async (data: SignUpFormData) => {\n      try {\n        formRef.current?.setErrors({});\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          email: Yup.string()\n            .required('Email obrigatório')\n            .email('Digite um email válido'),\n          password: Yup.string().min(6, 'No minímo 6 dígitos'),\n        });\n        await schema.validate(data, { abortEarly: false });\n        await api.post('/users', data);\n        history.push('/');\n        addToast({\n          type: 'success',\n          title: 'Cadastro realizado',\n          description: 'Você já pode fazer seu login no Gobarber!',\n        });\n      } catch (error) {\n        if (error instanceof Yup.ValidationError) {\n          const errors = getValidadtionErrors(error);\n          formRef.current?.setErrors(errors);\n        }\n        addToast({\n          type: 'error',\n          title: 'Error no cadastro',\n          description: 'Ocorreu um erro ao fazer cadastro, tente novamente',\n        });\n      }\n    },\n    [addToast, history],\n  );\n\n  return (\n    <Container>\n      <Background />\n      <Content>\n        <AnimationContainer>\n          <img src={logoimg} alt=\"Gobarber\" />\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Faça seu Cadastro</h1>\n            <Input type=\"text\" name=\"name\" placeholder=\"Nome\" icon={FiUser} />\n            <Input\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"E-mail\"\n              icon={FiMail}\n            />\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Senha\"\n              icon={FiLock}\n            />\n            <Button type=\"submit\">Cadastrar</Button>\n          </Form>\n          <Link to=\"/\">\n            <FiArrowLeft />\n            Voltar para logon\n          </Link>\n        </AnimationContainer>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/pages/Dashboard/index.tsx",["270","271","272"],"import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { isToday, format, parseISO, isAfter } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport DayPicker, { DayModifiers } from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport { FiClock, FiPower } from 'react-icons/fi';\nimport { Link, useHistory } from 'react-router-dom';\nimport {\n  Container,\n  Header,\n  HeaderContent,\n  Profile,\n  Content,\n  Schedule,\n  NexAppointment,\n  Section,\n  Appointment,\n  Calendar,\n} from './styles';\n\nimport logoImg from '../../assets/logo.svg';\nimport { useAuth } from '../../hooks/Auth';\nimport api from '../../services/api';\n\ninterface MonthAvailabilityItem {\n  day: number;\n  availability: boolean;\n}\n\ninterface Appointment {\n  id: string;\n  date: string;\n  hourFormatted: string;\n  user: {\n    name: string;\n    avatar_url: string;\n  };\n}\n\nfunction Dashboard(): JSX.Element {\n  const { signOut, user } = useAuth();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const [monthAvailability, setMonthAvailability] = useState<\n    MonthAvailabilityItem[]\n  >([]);\n  const [appointments, setAppointments] = useState<Appointment[]>([]);\n\n  const handleDateChange = useCallback((day: Date, modifiers: DayModifiers) => {\n    // if (modifiers.available && !modifiers.disabled) setSelectedDate(day);\n    if (modifiers.available) setSelectedDate(day);\n  }, []);\n\n  const handleMonthChange = useCallback((month: Date) => {\n    setCurrentMonth(month);\n  }, []);\n\n  useEffect(() => {\n    api\n      .get(`providers/${user.id}/month-availability`, {\n        // headers: {\n        //   Authorization: `Bearer ${TOKEN}`,\n        // },\n        params: {\n          year: currentMonth.getFullYear(),\n          month: currentMonth.getMonth() + 1,\n        },\n      })\n      .then(response => {\n        setMonthAvailability(response.data);\n      })\n      .catch(() => {\n        signOut();\n      });\n  }, [currentMonth, user.id]);\n\n  useEffect(() => {\n    api\n      .get<Appointment[]>('/appointments/me', {\n        params: {\n          year: selectedDate.getFullYear(),\n          month: selectedDate.getMonth() + 1,\n          day: selectedDate.getDate(),\n        },\n      })\n      .then(response => {\n        const appointmentsFormatted = response.data.map(appointment => {\n          return {\n            ...appointment,\n            hourFormatted: format(parseISO(appointment.date), 'HH:mm'),\n          };\n        });\n        setAppointments(appointmentsFormatted);\n      });\n  }, [selectedDate]);\n\n  const disableDays = useMemo(() => {\n    const year = currentMonth.getFullYear();\n    const month = currentMonth.getMonth();\n    const dates = monthAvailability\n      .filter(monthDay => !monthDay.availability)\n      .map(monthDay => new Date(year, month, monthDay.day));\n\n    return dates;\n  }, [currentMonth, monthAvailability]);\n\n  const morningAppointments = useMemo(() => {\n    return appointments\n      .filter(appointment => {\n        return parseISO(appointment.date).getHours() < 12;\n      })\n      .sort(\n        (a, b) => parseISO(a.date).getHours() - parseISO(b.date).getHours(),\n      );\n  }, [appointments]);\n\n  const afternoonAppointments = useMemo(() => {\n    return appointments\n      .filter(appointment => {\n        return parseISO(appointment.date).getHours() >= 12;\n      })\n      .sort(\n        (a, b) => parseISO(a.date).getHours() - parseISO(b.date).getHours(),\n      );\n  }, [appointments]);\n\n  const selectedDateAsText = useMemo(() => {\n    const toDay = isToday(selectedDate) ? 'Hoje' : '';\n    const dayAsMonth = format(selectedDate, \"'Dia' dd 'de' MMMM\", {\n      locale: ptBR,\n    });\n    const dayAsWeek = format(selectedDate, 'cccc', {\n      locale: ptBR,\n    });\n    return {\n      toDay,\n      dayAsMonth,\n      dayAsWeek,\n    };\n  }, [selectedDate]);\n\n  const nextAppointment = useMemo(() => {\n    return appointments.find(appointment =>\n      isAfter(parseISO(appointment.date), new Date()),\n    );\n  }, [appointments]);\n\n  return (\n    <Container>\n      <Header>\n        <HeaderContent>\n          <img src={logoImg} alt=\"Gobarber\" />\n          <Profile>\n            <img src={user.avatar_url} alt={user.name} />\n            <div>\n              <span>Bem-vindo</span>\n              <Link to=\"/profile\">\n                <strong>{user.name}</strong>\n              </Link>\n            </div>\n          </Profile>\n          <button type=\"button\" onClick={signOut}>\n            <FiPower />\n          </button>\n        </HeaderContent>\n      </Header>\n      <Content>\n        <Schedule>\n          <h1>Horário agendado</h1>\n          <p>\n            {selectedDateAsText.toDay && (\n              <span>{selectedDateAsText.toDay}</span>\n            )}\n            <span>{selectedDateAsText.dayAsMonth}</span>\n            <span>{selectedDateAsText.dayAsWeek}</span>\n          </p>\n          {selectedDateAsText.toDay && nextAppointment && (\n            <NexAppointment>\n              <strong>Agendamento a seguir</strong>\n              <div>\n                <img\n                  src={nextAppointment?.user.avatar_url}\n                  alt={nextAppointment?.user.name}\n                />\n                <strong>{nextAppointment?.user.name}</strong>\n                <span>\n                  <FiClock />\n                  {nextAppointment.hourFormatted}\n                </span>\n              </div>\n            </NexAppointment>\n          )}\n          <Section>\n            <strong>Manhã</strong>\n            {morningAppointments.length === 0 && (\n              <p>Nenhum agendamento neste período</p>\n            )}\n            {morningAppointments.map(appointment => (\n              <Appointment key={appointment.id}>\n                <span>\n                  <FiClock />\n                  {appointment.hourFormatted}\n                </span>\n                <div>\n                  <img\n                    src={appointment.user.avatar_url}\n                    alt={appointment.user.name}\n                  />\n                  <strong>{appointment.user.name}</strong>\n                </div>\n              </Appointment>\n            ))}\n          </Section>\n          <Section>\n            <strong>Tarde</strong>\n            {afternoonAppointments.length === 0 && (\n              <p>Nenhum agendamento neste período</p>\n            )}\n            {afternoonAppointments.map(appointment => (\n              <Appointment key={appointment.id}>\n                <span>\n                  <FiClock />\n                  {appointment.hourFormatted}\n                </span>\n                <div>\n                  <img\n                    src={appointment.user.avatar_url}\n                    alt={appointment.user.name}\n                  />\n                  <strong>{appointment.user.name}</strong>\n                </div>\n              </Appointment>\n            ))}\n          </Section>\n        </Schedule>\n        <Calendar>\n          <DayPicker\n            weekdaysShort={['D', 'S', 'T', 'Q', 'Q', 'S', 'S']}\n            fromMonth={new Date()}\n            disabledDays={[{ daysOfWeek: [0, 6] }, ...disableDays]}\n            modifiers={{\n              available: { daysOfWeek: [1, 2, 3, 4, 5] },\n            }}\n            selectedDays={selectedDate}\n            onMonthChange={handleMonthChange}\n            onDayClick={handleDateChange}\n            months={[\n              'Janeiro',\n              'Fevereiro',\n              'Março',\n              'Abril',\n              'Maio',\n              'Junho',\n              'Julho',\n              'Agosto',\n              'Setembro',\n              'Outubro',\n              'Novembro',\n              'Dezembro',\n            ]}\n          />\n        </Calendar>\n      </Content>\n    </Container>\n  );\n}\n\nexport default Dashboard;\n","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/pages/ForgotPassword/index.tsx",["273"],"import React, { useRef, useCallback, useState } from 'react';\nimport { FiLogIn, FiMail } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\n\nimport { Container, Content, Background, AnimationContainer } from './styles';\nimport logoimg from '../../assets/logo.svg';\n\nimport getValidadtionErrors from '../../utils/getValidationErros';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport { useToast } from '../../hooks/Toast';\nimport api from '../../services/api';\n\ninterface ForgotPasswordFormData {\n  email: string;\n}\n\nconst ForgotPassword: React.FC = () => {\n  const [loading, setLoading] = useState(0);\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const handleSubmit = useCallback(\n    async (data: ForgotPasswordFormData) => {\n      try {\n        setLoading(1);\n        formRef.current?.setErrors({});\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .required('Email obrigatório')\n            .email('Digite um email válido'),\n        });\n        await schema.validate(data, { abortEarly: false });\n\n        await api.post('/password/forgot', {\n          email: data.email,\n        });\n\n        addToast({\n          type: 'success',\n          title: 'E-mail de recuperação enviado',\n          description:\n            'Enviamos em e-mail para confirmar a recuperação de senha, cheque sua caixa de entrada',\n        });\n      } catch (error) {\n        if (error instanceof Yup.ValidationError) {\n          const errors = getValidadtionErrors(error);\n          formRef.current?.setErrors(errors);\n        }\n        addToast({\n          type: 'error',\n          title: 'Error na recuperação',\n          description:\n            'Ocorreu um erro ao tentar realizar a recuperação de senha, tente novamente.',\n        });\n      } finally {\n        setLoading(0);\n      }\n    },\n    [addToast],\n  );\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={logoimg} alt=\"Gobarber\" />\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Recuperar senha</h1>\n            <Input\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"E-mail\"\n              icon={FiMail}\n            />\n            <Button loading={loading} type=\"submit\">\n              Recuperar\n            </Button>\n          </Form>\n          <Link to=\"/\">\n            <FiLogIn />\n            Voltar ao login\n          </Link>\n        </AnimationContainer>\n      </Content>\n      <Background />\n    </Container>\n  );\n};\nexport default ForgotPassword;\n","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/pages/Signin/styles.ts",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/pages/SignUp/styles.ts",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/pages/ForgotPassword/styles.ts",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/utils/getValidationErros.ts",["274"],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/components/ToastContainer/index.tsx",["275"],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/components/ToastContainer/style.ts",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/components/Button/index.tsx",["276","277"],"import React, { ButtonHTMLAttributes, ReactNode } from 'react';\n\nimport { Container } from './style';\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement> & {\n  loading?: number;\n  children: ReactNode;\n};\n\nfunction Button({ children, loading, ...rest }: ButtonProps): JSX.Element {\n  return (\n    <Container type=\"button\" {...rest}>\n      {loading ? 'Carregando ...' : children}\n    </Container>\n  );\n}\n\nButton.defaultProps = {\n  loading: 0,\n};\n\nexport default Button;\n","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/components/Input/index.tsx",["278","279"],"import React, {\n  InputHTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\n\nimport { Container, Error } from './style';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  containerStyle?: React.CSSProperties;\n  icon: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({\n  containerStyle = {},\n  name,\n  icon: Icon,\n  ...rest\n}) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n  const handleIsFocused = useCallback(() => setIsFocused(true), []);\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n  return (\n    <Container\n      style={containerStyle}\n      isErrored={!!error}\n      isFilled={isFilled}\n      isFocused={isFocused}\n    >\n      {Icon && <Icon size={20} />}\n      <input\n        onFocus={handleIsFocused}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#c53030\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/components/Button/style.ts",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/components/Input/style.ts",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/components/ToastContainer/Toast/index.tsx",["280"],"import React, { useEffect } from 'react';\nimport {\n  FiAlertCircle,\n  FiXCircle,\n  FiInfo,\n  FiCheckCircle,\n} from 'react-icons/fi';\n\nimport { Container } from './styles';\n\nimport { ToastMessage, useToast } from '../../../hooks/Toast';\n\ninterface ObjectStyle {\n  [key: string]: unknown;\n}\n\ninterface ToastProps {\n  message: ToastMessage;\n  style: ObjectStyle;\n}\n\nconst icons = {\n  info: <FiInfo size={24} />,\n  error: <FiAlertCircle size={24} />,\n  success: <FiCheckCircle size={24} />,\n};\n\nconst Toast: React.FC<ToastProps> = ({ message, style }) => {\n  const { removeToast } = useToast();\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      removeToast(message.id);\n    }, 3000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [removeToast, message.id]);\n  return (\n    <Container\n      type={message.type}\n      hasDescription={Number(!!message.description)}\n      style={style}\n    >\n      {icons[message.type || 'info']}\n      <div>\n        <strong>{message.title}</strong>\n        {message.description && <p>{message.description}</p>}\n        <button onClick={() => removeToast(message.id)} type=\"button\">\n          <FiXCircle size={18} />\n        </button>\n      </div>\n    </Container>\n  );\n};\n\nexport default Toast;\n","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/components/ToastContainer/Toast/styles.ts",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/components/Tooltip/index.tsx",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/components/Tooltip/style.ts",[],["281","282","283","284","285"],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/pages/ResetPassword/index.tsx",["286"],"import React, { useRef, useCallback } from 'react';\nimport { FiLock } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { Container, Content, Background, AnimationContainer } from './styles';\nimport logoimg from '../../assets/logo.svg';\n\nimport getValidadtionErrors from '../../utils/getValidationErros';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport { useToast } from '../../hooks/Toast';\nimport api from '../../services/api';\n\ninterface ResetPasswordFormData {\n  password: string;\n  password_confirmation: string;\n}\n\nfunction ResetPassword(): JSX.Element {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(useLocation().search);\n  const token = searchParams.get('token');\n\n  if (!token) history.push('/');\n\n  const handleSubmit = useCallback(\n    async (data: ResetPasswordFormData) => {\n      try {\n        formRef.current?.setErrors({});\n        const schema = Yup.object().shape({\n          password: Yup.string().required('Senha obrigatória'),\n          password_confirmation: Yup.string().oneOf(\n            [Yup.ref('password'), undefined],\n            'Confirmação incorreta',\n          ),\n        });\n        await schema.validate(data, { abortEarly: false });\n\n        const { password, password_confirmation } = data;\n\n        await api.post('/password/reset', {\n          password,\n          password_confirmation,\n          token,\n        });\n        history.push('/');\n      } catch (error) {\n        if (error instanceof Yup.ValidationError) {\n          const errors = getValidadtionErrors(error);\n          formRef.current?.setErrors(errors);\n        }\n        addToast({\n          type: 'error',\n          title: 'Error ao resetar senha',\n          description: 'Ocorreu um erro ao resetar sua senha, tente novamente',\n        });\n      }\n    },\n    [token, addToast, history],\n  );\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={logoimg} alt=\"Gobarber\" />\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Resetar senha</h1>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Nova senha\"\n              icon={FiLock}\n            />\n            <Input\n              type=\"password\"\n              name=\"password_confirmation\"\n              placeholder=\"Confirmação da senha\"\n              icon={FiLock}\n            />\n            <Button type=\"submit\">Alterar senha</Button>\n          </Form>\n        </AnimationContainer>\n      </Content>\n      <Background />\n    </Container>\n  );\n}\n\nexport default ResetPassword;\n","/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/pages/ResetPassword/styles.ts",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/pages/Dashboard/styles.ts",[],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/pages/Profile/index.tsx",["287","288"],"/home/fabiano/projetos/rocketseat/gostack/aulas/nivel05/gobarber-web/src/pages/Profile/styles.ts",[],{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","replacedBy":"296"},{"ruleId":"297","replacedBy":"298"},{"ruleId":"299","severity":1,"message":"300","line":4,"column":10,"nodeType":"301","messageId":"302","endLine":4,"endColumn":21},{"ruleId":"299","severity":1,"message":"303","line":1,"column":17,"nodeType":"301","messageId":"302","endLine":1,"endColumn":37},{"ruleId":"299","severity":1,"message":"304","line":2,"column":3,"nodeType":"301","messageId":"302","endLine":2,"endColumn":22},{"ruleId":"299","severity":1,"message":"305","line":8,"column":10,"nodeType":"301","messageId":"302","endLine":8,"endColumn":23},{"ruleId":"299","severity":1,"message":"300","line":4,"column":10,"nodeType":"301","messageId":"302","endLine":4,"endColumn":21},{"ruleId":"299","severity":1,"message":"306","line":1,"column":10,"nodeType":"301","messageId":"302","endLine":1,"endColumn":25},{"ruleId":"299","severity":1,"message":"307","line":5,"column":10,"nodeType":"301","messageId":"302","endLine":5,"endColumn":22},{"ruleId":"299","severity":1,"message":"307","line":11,"column":10,"nodeType":"301","messageId":"302","endLine":11,"endColumn":22},{"ruleId":"299","severity":1,"message":"308","line":4,"column":17,"nodeType":"301","messageId":"302","endLine":4,"endColumn":35},{"ruleId":"289","replacedBy":"309"},{"ruleId":"291","replacedBy":"310"},{"ruleId":"293","replacedBy":"311"},{"ruleId":"295","replacedBy":"312"},{"ruleId":"297","replacedBy":"313"},{"ruleId":"299","severity":1,"message":"308","line":4,"column":17,"nodeType":"301","messageId":"302","endLine":4,"endColumn":35},{"ruleId":"299","severity":1,"message":"300","line":4,"column":10,"nodeType":"301","messageId":"302","endLine":4,"endColumn":21},{"ruleId":"299","severity":1,"message":"300","line":4,"column":10,"nodeType":"301","messageId":"302","endLine":4,"endColumn":21},{"ruleId":"299","severity":1,"message":"314","line":4,"column":21,"nodeType":"301","messageId":"302","endLine":4,"endColumn":33},{"ruleId":"299","severity":1,"message":"315","line":7,"column":16,"nodeType":"301","messageId":"302","endLine":7,"endColumn":26},{"ruleId":"316","severity":1,"message":"317","line":75,"column":6,"nodeType":"318","endLine":75,"endColumn":29,"suggestions":"319"},{"ruleId":"299","severity":1,"message":"300","line":4,"column":10,"nodeType":"301","messageId":"302","endLine":4,"endColumn":21},{"ruleId":"299","severity":1,"message":"306","line":1,"column":10,"nodeType":"301","messageId":"302","endLine":1,"endColumn":25},{"ruleId":"299","severity":1,"message":"307","line":5,"column":10,"nodeType":"301","messageId":"302","endLine":5,"endColumn":22},{"ruleId":"299","severity":1,"message":"303","line":1,"column":17,"nodeType":"301","messageId":"302","endLine":1,"endColumn":37},{"ruleId":"299","severity":1,"message":"320","line":1,"column":39,"nodeType":"301","messageId":"302","endLine":1,"endColumn":48},{"ruleId":"299","severity":1,"message":"304","line":2,"column":3,"nodeType":"301","messageId":"302","endLine":2,"endColumn":22},{"ruleId":"299","severity":1,"message":"305","line":8,"column":10,"nodeType":"301","messageId":"302","endLine":8,"endColumn":23},{"ruleId":"299","severity":1,"message":"307","line":11,"column":10,"nodeType":"301","messageId":"302","endLine":11,"endColumn":22},{"ruleId":"289","replacedBy":"321"},{"ruleId":"291","replacedBy":"322"},{"ruleId":"293","replacedBy":"323"},{"ruleId":"295","replacedBy":"324"},{"ruleId":"297","replacedBy":"325"},{"ruleId":"299","severity":1,"message":"300","line":4,"column":10,"nodeType":"301","messageId":"302","endLine":4,"endColumn":21},{"ruleId":"299","severity":1,"message":"300","line":1,"column":10,"nodeType":"301","messageId":"302","endLine":1,"endColumn":21},{"ruleId":"299","severity":1,"message":"326","line":3,"column":17,"nodeType":"301","messageId":"302","endLine":3,"endColumn":28},"lines-around-directive",["327"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'FormHandles' is defined but never used.","Identifier","unusedVar","'ButtonHTMLAttributes' is defined but never used.","'InputHTMLAttributes' is defined but never used.","'IconBaseProps' is defined but never used.","'ValidationError' is defined but never used.","'ToastMessage' is defined but never used.","'ReactDOMRouteProps' is defined but never used.",["327"],[],[],[],[],"'DayModifiers' is defined but never used.","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'signOut'. Either include it or remove the dependency array.","ArrayExpression",["328"],"'ReactNode' is defined but never used.",["327"],[],[],[],[],"'ChangeEvent' is defined but never used.","padding-line-between-statements",{"desc":"329","fix":"330"},"Update the dependencies array to be: [currentMonth, signOut, user.id]",{"range":"331","text":"332"},[2009,2032],"[currentMonth, signOut, user.id]"]